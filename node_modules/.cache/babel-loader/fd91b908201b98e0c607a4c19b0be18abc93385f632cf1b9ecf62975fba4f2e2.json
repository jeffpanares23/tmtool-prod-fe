{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      websiteUrl: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    submitUrl: function submitUrl() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var formattedUrl, response, processedData, _error$response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.errorMessage = \"\";\n              _this.$emit(\"loading\"); // Trigger loading state in parent component\n\n              // ✅ Ensure URL has proper format\n              formattedUrl = _this.websiteUrl.trim();\n              if (!/^https?:\\/\\//i.test(formattedUrl)) {\n                formattedUrl = \"http://\" + formattedUrl;\n              }\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post(\"http://127.0.0.1:8081/api/analyze-website\", {\n                url: formattedUrl\n              });\n            case 7:\n              response = _context.sent;\n              if (!(!response.data || response.data.error)) {\n                _context.next = 10;\n                break;\n              }\n              throw new Error(response.data.error || \"Invalid response from server.\");\n            case 10:\n              // ✅ Process API Response\n              processedData = {\n                url: formattedUrl,\n                metadata: response.data.metadata || {},\n                sop: response.data.sop || {},\n                seo_checks: response.data.seo_checks || {}\n              }; // ✅ Emit results back to parent component\n              _this.$emit(\"results\", processedData);\n              _context.next = 18;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](4);\n              _this.errorMessage = ((_error$response = _context.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.error) || \"An error occurred while processing the URL.\";\n              console.error(\"API Error:\", _context.t0);\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[4, 14]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","websiteUrl","errorMessage","methods","submitUrl","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formattedUrl","response","processedData","_error$response","wrap","_callee$","_context","prev","next","$emit","trim","test","post","url","sent","error","Error","metadata","sop","seo_checks","t0","console","stop"],"sources":["C:\\Users\\RYZEN 5 5500\\Documents\\GitHub\\OUTSOURCE\\TMTOOL\\tmtool-prod-fe\\src\\modules\\website-diagnostic-tool\\components\\WebsiteInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-white shadow-md rounded-lg p-6\">\r\n    <h2 class=\"text-lg font-semibold mb-4\">Run Diagnostic</h2>\r\n    <div class=\"flex justify-between items-center\">\r\n      <input\r\n        v-model=\"websiteUrl\"\r\n        type=\"url\"\r\n        class=\"flex-grow border rounded-lg p-3 text-gray-700 mr-4\"\r\n        placeholder=\"Enter URL or paste text here\"\r\n        required\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        @click=\"submitUrl\"\r\n        class=\"bg-blue-500 text-white py-3 px-6 rounded-lg hover:bg-blue-600 transition\"\r\n      >\r\n        GO!\r\n      </button>\r\n    </div>\r\n    <p v-if=\"errorMessage\" class=\"text-red-500 mt-4\">{{ errorMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      websiteUrl: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async submitUrl() {\r\n      this.errorMessage = \"\";\r\n      this.$emit(\"loading\"); // Trigger loading state in parent component\r\n\r\n      // ✅ Ensure URL has proper format\r\n      let formattedUrl = this.websiteUrl.trim();\r\n      if (!/^https?:\\/\\//i.test(formattedUrl)) {\r\n        formattedUrl = \"http://\" + formattedUrl;\r\n      }\r\n\r\n      try {\r\n        // ✅ Call `analyze-website` API\r\n        const response = await axios.post(\r\n          \"http://127.0.0.1:8081/api/analyze-website\",\r\n          { url: formattedUrl }\r\n        );\r\n\r\n        // ✅ Ensure the response contains valid data\r\n        if (!response.data || response.data.error) {\r\n          throw new Error(\r\n            response.data.error || \"Invalid response from server.\"\r\n          );\r\n        }\r\n\r\n        // ✅ Process API Response\r\n        const processedData = {\r\n          url: formattedUrl,\r\n          metadata: response.data.metadata || {},\r\n          sop: response.data.sop || {},\r\n          seo_checks: response.data.seo_checks || {},\r\n        };\r\n\r\n        // ✅ Emit results back to parent component\r\n        this.$emit(\"results\", processedData);\r\n      } catch (error) {\r\n        this.errorMessage =\r\n          error.response?.data?.error ||\r\n          \"An error occurred while processing the URL.\";\r\n        console.error(\"API Error:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;;AAwBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACDC,SAAS,WAATA,SAASA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,YAAA,EAAAC,QAAA,EAAAC,aAAA,EAAAC,eAAA;QAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAChBb,KAAI,CAACH,YAAW,GAAI,EAAE;cACtBG,KAAI,CAACc,KAAK,CAAC,SAAS,CAAC,EAAE;;cAEvB;cACIT,YAAW,GAAIL,KAAI,CAACJ,UAAU,CAACmB,IAAI,CAAC,CAAC;cACzC,IAAI,CAAC,eAAe,CAACC,IAAI,CAACX,YAAY,CAAC,EAAE;gBACvCA,YAAW,GAAI,SAAQ,GAAIA,YAAY;cACzC;cAAAM,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAIyBnB,KAAK,CAACuB,IAAI,CAC/B,2CAA2C,EAC3C;gBAAEC,GAAG,EAAEb;cAAa,CACtB,CAAC;YAAA;cAHKC,QAAO,GAAAK,QAAA,CAAAQ,IAAA;cAAA,MAMT,CAACb,QAAQ,CAACX,IAAG,IAAKW,QAAQ,CAACX,IAAI,CAACyB,KAAK;gBAAAT,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,MACjC,IAAIQ,KAAK,CACbf,QAAQ,CAACX,IAAI,CAACyB,KAAI,IAAK,+BACzB,CAAC;YAAA;cAGH;cACMb,aAAY,GAAI;gBACpBW,GAAG,EAAEb,YAAY;gBACjBiB,QAAQ,EAAEhB,QAAQ,CAACX,IAAI,CAAC2B,QAAO,IAAK,CAAC,CAAC;gBACtCC,GAAG,EAAEjB,QAAQ,CAACX,IAAI,CAAC4B,GAAE,IAAK,CAAC,CAAC;gBAC5BC,UAAU,EAAElB,QAAQ,CAACX,IAAI,CAAC6B,UAAS,IAAK,CAAC;cAC3C,CAAC,EAED;cACAxB,KAAI,CAACc,KAAK,CAAC,SAAS,EAAEP,aAAa,CAAC;cAAAI,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAc,EAAA,GAAAd,QAAA;cAEpCX,KAAI,CAACH,YAAW,GACd,EAAAW,eAAA,GAAAG,QAAA,CAAAc,EAAA,CAAMnB,QAAQ,cAAAE,eAAA,gBAAAA,eAAA,GAAdA,eAAA,CAAgBb,IAAI,cAAAa,eAAA,uBAApBA,eAAA,CAAsBY,KAAI,KAC1B,6CAA6C;cAC/CM,OAAO,CAACN,KAAK,CAAC,YAAY,EAAAT,QAAA,CAAAc,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAd,QAAA,CAAAgB,IAAA;UAAA;QAAA,GAAAvB,OAAA;MAAA;IAEtC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}