{"ast":null,"code":"import _toConsumableArray from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { ref, computed, onMounted } from \"vue\";\nimport CreateTaskPanel from \"../components/CreateTaskPanel.vue\";\nimport UpdateTaskPanel from \"../components/UpdateTaskPanel.vue\";\nimport taskService from \"../services/taskService\";\nimport { format } from \"date-fns\";\nexport default {\n  name: \"TaskTableView\",\n  // props: {\n  //   tasks: {\n  //     type: Array,\n  //     required: true,\n  //     default: () => [],\n  //   },\n  // },\n  components: {\n    CreateTaskPanel: CreateTaskPanel,\n    UpdateTaskPanel: UpdateTaskPanel // âœ… Register the component here\n  },\n  setup: function setup(props) {\n    var activeTab = ref(\"All Tasks\");\n    var showDropdown = ref(false);\n    var showMoreTabs = ref(false);\n    var selectedFilter = ref(\"\");\n    var sortKey = ref(\"dateCreated\");\n    var sortOrder = ref(\"desc\");\n    var showCreatePanel = ref(false);\n    var showUpdatePanel = ref(false);\n    var selectedTask = ref(null);\n    var tasks = ref([]); // API data storage\n\n    var categories = {\n      total: \"All Tasks\",\n      open: \"Open Tasks\",\n      inProgress: \"In Progress\",\n      done: \"Completed Tasks\",\n      overdue: \"Overdue Tasks\"\n    };\n    var tabs = [{\n      name: \"All Tasks\"\n    }, {\n      name: \"My Tasks\"\n    }, {\n      name: \"Created Tasks\"\n    }, {\n      name: \"SEO Service\"\n    }, {\n      name: \"Content Writing\"\n    }];\n    var tableHeaders = [{\n      key: \"id\",\n      label: \"Task ID\"\n    }, {\n      key: \"company\",\n      label: \"Task\"\n    }, {\n      key: \"service\",\n      label: \"Service\"\n    }, {\n      key: \"dateCreated\",\n      label: \"Date Created\"\n    }, {\n      key: \"status\",\n      label: \"Status\"\n    }\n    // { key: \"actions\", label: \"Actions\" },\n    ];\n\n    // Fetch tasks from the API\n    var fetchTasks = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return taskService.getTasks();\n            case 2:\n              tasks.value = _context.sent;\n              console.log(tasks.value);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchTasks() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // Delete task function\n    var deleteTask = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!confirm(\"Are you sure you want to delete this task?\")) {\n                _context2.next = 4;\n                break;\n              }\n              _context2.next = 3;\n              return taskService.deleteTask(id);\n            case 3:\n              fetchTasks(); // Refresh task list\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function deleteTask(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var openUpdateTask = function openUpdateTask(task) {\n      selectedTask.value = _objectSpread({}, task); // Clone the task object\n      showUpdatePanel.value = true;\n      console.log(\"opened\", showUpdatePanel.value);\n    };\n    onMounted(function () {\n      fetchTasks();\n    });\n    var filteredTasks = computed(function () {\n      if (!selectedFilter.value) return tasks.value;\n      return tasks.value.filter(function (task) {\n        if (selectedFilter.value === \"open\") return task.status === \"Open\";\n        if (selectedFilter.value === \"inProgress\") return task.status === \"In Progress\";\n        if (selectedFilter.value === \"done\") return task.status === \"Completed\";\n        if (selectedFilter.value === \"overdue\") return task.status === \"Overdue\";\n        return true;\n      });\n    });\n    var formatDate = function formatDate(date) {\n      if (!date || isNaN(new Date(date).getTime())) {\n        return \"Invalid Date\"; // Return fallback text if date is invalid\n      }\n      return format(new Date(date), \"MMM dd, yyyy\");\n    };\n    var getStatusClasses = function getStatusClasses(status) {\n      var statusClasses = {\n        \"In Progress\": \"bg-blue-500\",\n        Completed: \"bg-green-500\",\n        Overdue: \"bg-red-500\",\n        Open: \"bg-yellow-500\"\n      };\n      return statusClasses[status] || \"bg-gray-500\";\n    };\n    var filterByStatus = function filterByStatus(type) {\n      selectedFilter.value = type;\n    };\n    var toggleDropdown = function toggleDropdown() {\n      showDropdown.value = !showDropdown.value;\n    };\n    var closeDropdown = function closeDropdown() {\n      showDropdown.value = false;\n    };\n\n    // Computed properties\n    var visibleTabs = computed(function () {\n      return tabs.slice(0, 3);\n    });\n    var hiddenTabs = computed(function () {\n      return tabs.slice(3);\n    });\n    var activeTabName = computed(function () {\n      return activeTab.value;\n    });\n    var displayedTasks = computed(function () {\n      return tasks.value;\n    });\n    var taskCounts = computed(function () {\n      return {\n        total: displayedTasks.value.length,\n        open: displayedTasks.value.filter(function (task) {\n          return task.status === \"Open\";\n        }).length,\n        inProgress: tasks.value.filter(function (task) {\n          return task.status === \"In Progress\";\n        }).length,\n        done: displayedTasks.value.filter(function (task) {\n          return task.status === \"Completed\";\n        }).length,\n        overdue: displayedTasks.value.filter(function (task) {\n          return task.status === \"Overdue\";\n        }).length\n      };\n    });\n    var sortedAndFilteredTasks = computed(function () {\n      var filtered = _toConsumableArray(props.tasks);\n\n      // Apply tab filter\n      if (activeTab.value !== \"All Tasks\") {\n        filtered = filtered.filter(function (task) {\n          return task.service === activeTab.value;\n        });\n      }\n\n      // Apply category filter\n      if (selectedFilter.value) {\n        filtered = filtered.filter(function (task) {\n          switch (selectedFilter.value) {\n            case \"open\":\n              return task.status === \"Open\";\n            case \"done\":\n              return task.status === \"Completed\";\n            case \"overdue\":\n              return task.status === \"Overdue\";\n            default:\n              return true;\n          }\n        });\n      }\n\n      // Apply sorting\n      return filtered.sort(function (a, b) {\n        var aValue = a[sortKey.value];\n        var bValue = b[sortKey.value];\n        if (sortOrder.value === \"asc\") {\n          return aValue > bValue ? 1 : -1;\n        }\n        return aValue < bValue ? 1 : -1;\n      });\n    });\n\n    // Methods\n    var setActiveTab = function setActiveTab(tab) {\n      activeTab.value = tab.name;\n      showMoreTabs.value = false;\n    };\n    var toggleMoreTabs = function toggleMoreTabs() {\n      showMoreTabs.value = !showMoreTabs.value;\n    };\n    var closeMoreTabs = function closeMoreTabs() {\n      showMoreTabs.value = false;\n    };\n    var selectFilterCategory = function selectFilterCategory(category) {\n      selectedFilter.value = category;\n      showDropdown.value = false;\n    };\n    var sortBy = function sortBy(key) {\n      if (sortKey.value === key) {\n        sortOrder.value = sortOrder.value === \"asc\" ? \"desc\" : \"asc\";\n      } else {\n        sortKey.value = key;\n        sortOrder.value = \"asc\";\n      }\n    };\n    var getSummaryBoxClasses = function getSummaryBoxClasses(type) {\n      var classes = {\n        total: \"bg-purple-100 text-purple-700\",\n        open: \"bg-orange-100 text-orange-700\",\n        inProgress: \"bg-blue-100 text-blue-400\",\n        done: \"bg-green-100 text-green-700\",\n        overdue: \"bg-red-100 text-red-700\"\n      };\n      return classes[type];\n    };\n    var getSummaryBoxClassesBg = function getSummaryBoxClassesBg(type) {\n      var classes = {\n        total: \"bg-purple-700\",\n        open: \"bg-orange-700\",\n        inProgress: \"bg-blue-400\",\n        done: \"bg-green-700\",\n        overdue: \"bg-red-700\"\n      };\n      return classes[type];\n    };\n    return {\n      activeTab: activeTab,\n      showDropdown: showDropdown,\n      showMoreTabs: showMoreTabs,\n      selectedFilter: selectedFilter,\n      filteredTasks: filteredTasks,\n      filterByStatus: filterByStatus,\n      sortKey: sortKey,\n      sortOrder: sortOrder,\n      categories: categories,\n      tabs: tabs,\n      tableHeaders: tableHeaders,\n      visibleTabs: visibleTabs,\n      hiddenTabs: hiddenTabs,\n      activeTabName: activeTabName,\n      taskCounts: taskCounts,\n      sortedAndFilteredTasks: sortedAndFilteredTasks,\n      displayedTasks: displayedTasks,\n      setActiveTab: setActiveTab,\n      toggleDropdown: toggleDropdown,\n      toggleMoreTabs: toggleMoreTabs,\n      closeDropdown: closeDropdown,\n      closeMoreTabs: closeMoreTabs,\n      selectFilterCategory: selectFilterCategory,\n      sortBy: sortBy,\n      formatDate: formatDate,\n      getSummaryBoxClasses: getSummaryBoxClasses,\n      getSummaryBoxClassesBg: getSummaryBoxClassesBg,\n      showCreatePanel: showCreatePanel,\n      showUpdatePanel: showUpdatePanel,\n      openUpdateTask: openUpdateTask,\n      selectedTask: selectedTask,\n      tasks: tasks,\n      fetchTasks: fetchTasks,\n      deleteTask: deleteTask,\n      getStatusClasses: getStatusClasses\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","CreateTaskPanel","UpdateTaskPanel","taskService","format","name","components","setup","props","activeTab","showDropdown","showMoreTabs","selectedFilter","sortKey","sortOrder","showCreatePanel","showUpdatePanel","selectedTask","tasks","categories","total","open","inProgress","done","overdue","tabs","tableHeaders","key","label","fetchTasks","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getTasks","value","sent","console","log","stop","apply","arguments","deleteTask","_ref2","_callee2","id","_callee2$","_context2","confirm","_x","openUpdateTask","task","_objectSpread","filteredTasks","filter","status","formatDate","date","isNaN","Date","getTime","getStatusClasses","statusClasses","Completed","Overdue","Open","filterByStatus","type","toggleDropdown","closeDropdown","visibleTabs","slice","hiddenTabs","activeTabName","displayedTasks","taskCounts","length","sortedAndFilteredTasks","filtered","_toConsumableArray","service","sort","a","b","aValue","bValue","setActiveTab","tab","toggleMoreTabs","closeMoreTabs","selectFilterCategory","category","sortBy","getSummaryBoxClasses","classes","getSummaryBoxClassesBg"],"sources":["C:\\Users\\RYZEN 5 5500\\Documents\\GitHub\\OUTSOURCE\\TMTOOL\\tmtool-prod-fe\\src\\views\\TaskTableView.vue"],"sourcesContent":["<template>\r\n  <div class=\"task-container flex p-4 gap-6\">\r\n    <!-- Task Table Section (Shrinks when panel is open) -->\r\n    <!-- Breadcrumbs -->\r\n    <div\r\n      class=\"task-table-view rounded-2xl p-6 transition-all\"\r\n      :class=\"{ 'shrink-table': showCreatePanel || showUpdatePanel }\"\r\n    >\r\n      <div\r\n        class=\"breadcrumbs text-gray-600 text-sm flex items-center gap-2 mb-4\"\r\n      >\r\n        <span\r\n          @click=\"$router.push('/task-dashboard')\"\r\n          class=\"hover:underline cursor-pointer\"\r\n        >\r\n          Task\r\n        </span>\r\n        <span class=\"text-gray-400\">\r\n          <i class=\"fas fa-chevron-right\"></i>\r\n        </span>\r\n        <span class=\"text-gray-900 font-semibold\">{{ activeTabName }}</span>\r\n      </div>\r\n\r\n      <!-- Tabs -->\r\n      <div class=\"tabs flex items-center relative\">\r\n        <div\r\n          v-for=\"tab in visibleTabs\"\r\n          :key=\"tab.name\"\r\n          @click=\"setActiveTab(tab)\"\r\n          class=\"tab flex justify-center items-center px-4 py-2 rounded-t-lg transition-colors min-w-56 min-h-12 cursor-pointer bg-white bg-opacity-50 border-t-2 drop-shadow-lg\"\r\n          :class=\"{\r\n            'text-blue-500 font-medium bg-white bg-opacity-100':\r\n              activeTab === tab.name,\r\n            'text-gray-600 hover:text-gray-900': activeTab !== tab.name,\r\n          }\"\r\n        >\r\n          {{ tab.name }}\r\n        </div>\r\n\r\n        <!-- More Services Dropdown -->\r\n        <div\r\n          v-if=\"hiddenTabs.length > 0\"\r\n          class=\"relative\"\r\n          v-click-outside=\"closeMoreTabs\"\r\n        >\r\n          <div\r\n            @click=\"toggleMoreTabs\"\r\n            class=\"cursor-pointer px-4 py-2 rounded-t-lg text-gray-600 hover:text-gray-900\"\r\n          >\r\n            <i class=\"fas fa-ellipsis-h\"></i>\r\n          </div>\r\n          <div\r\n            v-if=\"showMoreTabs\"\r\n            class=\"absolute bg-white shadow-lg rounded-lg mt-2 w-48 z-10\"\r\n          >\r\n            <ul class=\"py-2\">\r\n              <li\r\n                v-for=\"tab in hiddenTabs\"\r\n                :key=\"tab.name\"\r\n                @click=\"setActiveTab(tab)\"\r\n                class=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n              >\r\n                {{ tab.name }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"task-table-view bg-white rounded-b-lg p-6 space-y-6 shadow-lg transition-all\"\r\n      >\r\n        <!-- Summary Boxes -->\r\n        <div class=\"flex flex-cols-1 sm:flex-cols-2 lg:flex-cols-4 gap-4 mt-4\">\r\n          <div\r\n            v-for=\"(count, type) in taskCounts\"\r\n            :key=\"type\"\r\n            :class=\"getSummaryBoxClasses(type)\"\r\n            @click=\"filterByStatus(type)\"\r\n            class=\"summary-box rounded-lg px-4 py-4 flex flex-row justify-center items-center cursor-pointer transition-transform hover:scale-105 max-h-9 gap-2\"\r\n          >\r\n            <span class=\"text-md\">\r\n              {{ categories[type] }}\r\n            </span>\r\n            <span\r\n              class=\"text-md text-white flex items-center px-2 rounded\"\r\n              :class=\"getSummaryBoxClassesBg(type)\"\r\n            >\r\n              {{ count }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Filter Dropdown -->\r\n        <div class=\"flex justify-between items-center\">\r\n          <div class=\"relative\">\r\n            <button\r\n              @click=\"toggleDropdown\"\r\n              class=\"filter-button bg-gray-100 text-gray-600 px-4 py-2 rounded-lg flex items-center gap-2 hover:bg-gray-200 transition\"\r\n            >\r\n              <!-- <span>Filter by {{ selectedFilter || \"All\" }}</span> -->\r\n              <span>{{ categories[selectedFilter] || \"Filter\" }}</span>\r\n              <i class=\"fas fa-chevron-down\"></i>\r\n            </button>\r\n            <div\r\n              v-if=\"showDropdown\"\r\n              v-click-outside=\"closeDropdown\"\r\n              class=\"dropdown bg-white shadow-lg rounded-lg mt-2 absolute top-full z-10 min-w-44\"\r\n            >\r\n              <ul class=\"py-2\">\r\n                <li\r\n                  v-for=\"(category, key) in categories\"\r\n                  :key=\"key\"\r\n                  @click=\"selectFilterCategory(key)\"\r\n                  class=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n                >\r\n                  {{ category }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <button\r\n            @click=\"showCreatePanel = true\"\r\n            class=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n          >\r\n            + Create Task\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Task Table -->\r\n        <div class=\"mt-6 overflow-x-auto\">\r\n          <table\r\n            class=\"w-full border-collapse border border-gray-300 rounded-lg text-left\"\r\n          >\r\n            <thead>\r\n              <tr class=\"bg-gray-100 text-gray-700\">\r\n                <th\r\n                  v-for=\"header in tableHeaders\"\r\n                  :key=\"header.key\"\r\n                  class=\"p-4 border border-gray-300\"\r\n                >\r\n                  {{ header.label }}\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                v-for=\"task in filteredTasks\"\r\n                :key=\"task.id\"\r\n                @click=\"openUpdateTask(task)\"\r\n                class=\"hover:bg-gray-50 transition-colors cursor-pointer\"\r\n              >\r\n                <td class=\"p-4 border border-gray-300\">{{ task.task_id }}</td>\r\n                <td class=\"p-4 border border-gray-300\">\r\n                  {{ task.subject }}\r\n                </td>\r\n                <td class=\"p-4 border border-gray-300\">{{ task.service }}</td>\r\n                <td class=\"p-4 border border-gray-300\">\r\n                  {{ formatDate(task.created_at) }}\r\n                </td>\r\n                <td class=\"p-4 border border-gray-300 text-center\">\r\n                  <span\r\n                    class=\"status-pill\"\r\n                    :class=\"getStatusClasses(task.status)\"\r\n                  >\r\n                    {{ task.status }}\r\n                  </span>\r\n                </td>\r\n                <!-- <td class=\"p-4 border border-gray-300 text-center\">\r\n                  <i class=\"fas fa-ellipsis-h cursor-pointer text-gray-600\"></i>\r\n                </td> -->\r\n              </tr>\r\n              <tr v-if=\"filteredTasks.length === 0\">\r\n                <td colspan=\"6\" class=\"p-4 text-center text-gray-500\">\r\n                  No tasks found matching the current filters\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Task Creation Panel (Slides in when opened) -->\r\n    <CreateTaskPanel\r\n      :isVisible=\"showCreatePanel\"\r\n      @close=\"showCreatePanel = false\"\r\n      @taskCreated=\"fetchTasks\"\r\n    />\r\n    <!-- Task Update Panel (Slides in when opened) -->\r\n    <UpdateTaskPanel\r\n      :isVisible=\"showUpdatePanel\"\r\n      :task=\"selectedTask\"\r\n      @close=\"showUpdatePanel = false\"\r\n      @taskUpdated=\"fetchTasks\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport CreateTaskPanel from \"../components/CreateTaskPanel.vue\";\r\nimport UpdateTaskPanel from \"../components/UpdateTaskPanel.vue\";\r\nimport taskService from \"../services/taskService\";\r\nimport { format } from \"date-fns\";\r\nexport default {\r\n  name: \"TaskTableView\",\r\n  // props: {\r\n  //   tasks: {\r\n  //     type: Array,\r\n  //     required: true,\r\n  //     default: () => [],\r\n  //   },\r\n  // },\r\n  components: {\r\n    CreateTaskPanel,\r\n    UpdateTaskPanel, // âœ… Register the component here\r\n  },\r\n  setup(props) {\r\n    const activeTab = ref(\"All Tasks\");\r\n    const showDropdown = ref(false);\r\n    const showMoreTabs = ref(false);\r\n    const selectedFilter = ref(\"\");\r\n    const sortKey = ref(\"dateCreated\");\r\n    const sortOrder = ref(\"desc\");\r\n    const showCreatePanel = ref(false);\r\n    const showUpdatePanel = ref(false);\r\n    const selectedTask = ref(null);\r\n    const tasks = ref([]); // API data storage\r\n\r\n    const categories = {\r\n      total: \"All Tasks\",\r\n      open: \"Open Tasks\",\r\n      inProgress: \"In Progress\",\r\n      done: \"Completed Tasks\",\r\n      overdue: \"Overdue Tasks\",\r\n    };\r\n\r\n    const tabs = [\r\n      { name: \"All Tasks\" },\r\n      { name: \"My Tasks\" },\r\n      { name: \"Created Tasks\" },\r\n      { name: \"SEO Service\" },\r\n      { name: \"Content Writing\" },\r\n    ];\r\n\r\n    const tableHeaders = [\r\n      { key: \"id\", label: \"Task ID\" },\r\n      { key: \"company\", label: \"Task\" },\r\n      { key: \"service\", label: \"Service\" },\r\n      { key: \"dateCreated\", label: \"Date Created\" },\r\n      { key: \"status\", label: \"Status\" },\r\n      // { key: \"actions\", label: \"Actions\" },\r\n    ];\r\n\r\n    // Fetch tasks from the API\r\n    const fetchTasks = async () => {\r\n      tasks.value = await taskService.getTasks();\r\n      console.log(tasks.value);\r\n    };\r\n\r\n    // Delete task function\r\n    const deleteTask = async (id) => {\r\n      if (confirm(\"Are you sure you want to delete this task?\")) {\r\n        await taskService.deleteTask(id);\r\n        fetchTasks(); // Refresh task list\r\n      }\r\n    };\r\n\r\n    const openUpdateTask = (task) => {\r\n      selectedTask.value = { ...task }; // Clone the task object\r\n      showUpdatePanel.value = true;\r\n      console.log(\"opened\", showUpdatePanel.value);\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchTasks();\r\n    });\r\n\r\n    const filteredTasks = computed(() => {\r\n      if (!selectedFilter.value) return tasks.value;\r\n      return tasks.value.filter((task) => {\r\n        if (selectedFilter.value === \"open\") return task.status === \"Open\";\r\n        if (selectedFilter.value === \"inProgress\")\r\n          return task.status === \"In Progress\";\r\n        if (selectedFilter.value === \"done\") return task.status === \"Completed\";\r\n        if (selectedFilter.value === \"overdue\")\r\n          return task.status === \"Overdue\";\r\n        return true;\r\n      });\r\n    });\r\n\r\n    const formatDate = (date) => {\r\n      if (!date || isNaN(new Date(date).getTime())) {\r\n        return \"Invalid Date\"; // Return fallback text if date is invalid\r\n      }\r\n      return format(new Date(date), \"MMM dd, yyyy\");\r\n    };\r\n\r\n    const getStatusClasses = (status) => {\r\n      const statusClasses = {\r\n        \"In Progress\": \"bg-blue-500\",\r\n        Completed: \"bg-green-500\",\r\n        Overdue: \"bg-red-500\",\r\n        Open: \"bg-yellow-500\",\r\n      };\r\n      return statusClasses[status] || \"bg-gray-500\";\r\n    };\r\n\r\n    const filterByStatus = (type) => {\r\n      selectedFilter.value = type;\r\n    };\r\n\r\n    const toggleDropdown = () => {\r\n      showDropdown.value = !showDropdown.value;\r\n    };\r\n    const closeDropdown = () => {\r\n      showDropdown.value = false;\r\n    };\r\n\r\n    // Computed properties\r\n    const visibleTabs = computed(() => tabs.slice(0, 3));\r\n    const hiddenTabs = computed(() => tabs.slice(3));\r\n    const activeTabName = computed(() => activeTab.value);\r\n\r\n    const displayedTasks = computed(() => tasks.value);\r\n\r\n    const taskCounts = computed(() => ({\r\n      total: displayedTasks.value.length,\r\n      open: displayedTasks.value.filter((task) => task.status === \"Open\")\r\n        .length,\r\n      inProgress: tasks.value.filter((task) => task.status === \"In Progress\")\r\n        .length,\r\n      done: displayedTasks.value.filter((task) => task.status === \"Completed\")\r\n        .length,\r\n      overdue: displayedTasks.value.filter((task) => task.status === \"Overdue\")\r\n        .length,\r\n    }));\r\n\r\n    const sortedAndFilteredTasks = computed(() => {\r\n      let filtered = [...props.tasks];\r\n\r\n      // Apply tab filter\r\n      if (activeTab.value !== \"All Tasks\") {\r\n        filtered = filtered.filter((task) => task.service === activeTab.value);\r\n      }\r\n\r\n      // Apply category filter\r\n      if (selectedFilter.value) {\r\n        filtered = filtered.filter((task) => {\r\n          switch (selectedFilter.value) {\r\n            case \"open\":\r\n              return task.status === \"Open\";\r\n            case \"done\":\r\n              return task.status === \"Completed\";\r\n            case \"overdue\":\r\n              return task.status === \"Overdue\";\r\n            default:\r\n              return true;\r\n          }\r\n        });\r\n      }\r\n\r\n      // Apply sorting\r\n      return filtered.sort((a, b) => {\r\n        const aValue = a[sortKey.value];\r\n        const bValue = b[sortKey.value];\r\n\r\n        if (sortOrder.value === \"asc\") {\r\n          return aValue > bValue ? 1 : -1;\r\n        }\r\n        return aValue < bValue ? 1 : -1;\r\n      });\r\n    });\r\n\r\n    // Methods\r\n    const setActiveTab = (tab) => {\r\n      activeTab.value = tab.name;\r\n      showMoreTabs.value = false;\r\n    };\r\n\r\n    const toggleMoreTabs = () => {\r\n      showMoreTabs.value = !showMoreTabs.value;\r\n    };\r\n\r\n    const closeMoreTabs = () => {\r\n      showMoreTabs.value = false;\r\n    };\r\n\r\n    const selectFilterCategory = (category) => {\r\n      selectedFilter.value = category;\r\n      showDropdown.value = false;\r\n    };\r\n\r\n    const sortBy = (key) => {\r\n      if (sortKey.value === key) {\r\n        sortOrder.value = sortOrder.value === \"asc\" ? \"desc\" : \"asc\";\r\n      } else {\r\n        sortKey.value = key;\r\n        sortOrder.value = \"asc\";\r\n      }\r\n    };\r\n\r\n    const getSummaryBoxClasses = (type) => {\r\n      const classes = {\r\n        total: \"bg-purple-100 text-purple-700\",\r\n        open: \"bg-orange-100 text-orange-700\",\r\n        inProgress: \"bg-blue-100 text-blue-400\",\r\n        done: \"bg-green-100 text-green-700\",\r\n        overdue: \"bg-red-100 text-red-700\",\r\n      };\r\n      return classes[type];\r\n    };\r\n\r\n    const getSummaryBoxClassesBg = (type) => {\r\n      const classes = {\r\n        total: \"bg-purple-700\",\r\n        open: \"bg-orange-700\",\r\n        inProgress: \"bg-blue-400\",\r\n        done: \"bg-green-700\",\r\n        overdue: \"bg-red-700\",\r\n      };\r\n      return classes[type];\r\n    };\r\n\r\n    return {\r\n      activeTab,\r\n      showDropdown,\r\n      showMoreTabs,\r\n      selectedFilter,\r\n      filteredTasks,\r\n      filterByStatus,\r\n      sortKey,\r\n      sortOrder,\r\n      categories,\r\n      tabs,\r\n      tableHeaders,\r\n      visibleTabs,\r\n      hiddenTabs,\r\n      activeTabName,\r\n      taskCounts,\r\n      sortedAndFilteredTasks,\r\n      displayedTasks,\r\n      setActiveTab,\r\n      toggleDropdown,\r\n      toggleMoreTabs,\r\n      closeDropdown,\r\n      closeMoreTabs,\r\n      selectFilterCategory,\r\n      sortBy,\r\n      formatDate,\r\n      getSummaryBoxClasses,\r\n      getSummaryBoxClassesBg,\r\n      showCreatePanel,\r\n      showUpdatePanel,\r\n      openUpdateTask,\r\n      selectedTask,\r\n      tasks,\r\n      fetchTasks,\r\n      deleteTask,\r\n      getStatusClasses,\r\n    };\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.task-container {\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n.task-table-view {\r\n  width: 100%;\r\n  transition: width 1s ease-in-out;\r\n}\r\n.shrink-table {\r\n  width: 60%;\r\n}\r\n.create-task-btn {\r\n  background: #3b82f6;\r\n  color: white;\r\n  padding: 10px 16px;\r\n  border-radius: 8px;\r\n  font-weight: bold;\r\n  transition: background 1s ease-in-out;\r\n}\r\n.create-task-btn:hover {\r\n  background: #2563eb;\r\n}\r\n\r\n.status-pill {\r\n  padding: 6px 12px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.status-pill.bg-blue-500 {\r\n  background: #3b82f6;\r\n  color: white;\r\n}\r\n\r\n.status-pill.bg-green-500 {\r\n  background: #10b981;\r\n  color: white;\r\n}\r\n\r\n.status-pill.bg-red-500 {\r\n  background: #ef4444;\r\n  color: white;\r\n}\r\n\r\n.status-pill.bg-yellow-500 {\r\n  background: #fbbf24;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;AAsMA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAC9C,OAAOC,eAAc,MAAO,mCAAmC;AAC/D,OAAOC,eAAc,MAAO,mCAAmC;AAC/D,OAAOC,WAAU,MAAO,yBAAyB;AACjD,SAASC,MAAK,QAAS,UAAU;AACjC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,UAAU,EAAE;IACVL,eAAe,EAAfA,eAAe;IACfC,eAAe,EAAfA,eAAe,CAAE;EACnB,CAAC;EACDK,KAAK,WAALA,KAAKA,CAACC,KAAK,EAAE;IACX,IAAMC,SAAQ,GAAIX,GAAG,CAAC,WAAW,CAAC;IAClC,IAAMY,YAAW,GAAIZ,GAAG,CAAC,KAAK,CAAC;IAC/B,IAAMa,YAAW,GAAIb,GAAG,CAAC,KAAK,CAAC;IAC/B,IAAMc,cAAa,GAAId,GAAG,CAAC,EAAE,CAAC;IAC9B,IAAMe,OAAM,GAAIf,GAAG,CAAC,aAAa,CAAC;IAClC,IAAMgB,SAAQ,GAAIhB,GAAG,CAAC,MAAM,CAAC;IAC7B,IAAMiB,eAAc,GAAIjB,GAAG,CAAC,KAAK,CAAC;IAClC,IAAMkB,eAAc,GAAIlB,GAAG,CAAC,KAAK,CAAC;IAClC,IAAMmB,YAAW,GAAInB,GAAG,CAAC,IAAI,CAAC;IAC9B,IAAMoB,KAAI,GAAIpB,GAAG,CAAC,EAAE,CAAC,EAAE;;IAEvB,IAAMqB,UAAS,GAAI;MACjBC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE,YAAY;MAClBC,UAAU,EAAE,aAAa;MACzBC,IAAI,EAAE,iBAAiB;MACvBC,OAAO,EAAE;IACX,CAAC;IAED,IAAMC,IAAG,GAAI,CACX;MAAEpB,IAAI,EAAE;IAAY,CAAC,EACrB;MAAEA,IAAI,EAAE;IAAW,CAAC,EACpB;MAAEA,IAAI,EAAE;IAAgB,CAAC,EACzB;MAAEA,IAAI,EAAE;IAAc,CAAC,EACvB;MAAEA,IAAI,EAAE;IAAkB,CAAC,CAC5B;IAED,IAAMqB,YAAW,GAAI,CACnB;MAAEC,GAAG,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAU,CAAC,EAC/B;MAAED,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAO,CAAC,EACjC;MAAED,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAU,CAAC,EACpC;MAAED,GAAG,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAe,CAAC,EAC7C;MAAED,GAAG,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAS;IACjC;IAAA,CACD;;IAED;IACA,IAAMC,UAAS;MAAA,IAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAI,SAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACGpC,WAAW,CAACqC,QAAQ,CAAC,CAAC;YAAA;cAA1CtB,KAAK,CAACuB,KAAI,GAAAJ,QAAA,CAAAK,IAAA;cACVC,OAAO,CAACC,GAAG,CAAC1B,KAAK,CAACuB,KAAK,CAAC;YAAA;YAAA;cAAA,OAAAJ,QAAA,CAAAQ,IAAA;UAAA;QAAA,GAAAX,OAAA;MAAA,CACzB;MAAA,gBAHKL,UAASA,CAAA;QAAA,OAAAC,IAAA,CAAAgB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAGd;;IAED;IACA,IAAMC,UAAS;MAAA,IAAAC,KAAA,GAAAlB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAI,SAAAiB,SAAOC,EAAE;QAAA,OAAAnB,mBAAA,GAAAG,IAAA,UAAAiB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;YAAA;cAAA,KACtBe,OAAO,CAAC,4CAA4C,CAAC;gBAAAD,SAAA,CAAAd,IAAA;gBAAA;cAAA;cAAAc,SAAA,CAAAd,IAAA;cAAA,OACjDpC,WAAW,CAAC6C,UAAU,CAACG,EAAE,CAAC;YAAA;cAChCtB,UAAU,CAAC,CAAC,EAAE;YAAA;YAAA;cAAA,OAAAwB,SAAA,CAAAR,IAAA;UAAA;QAAA,GAAAK,QAAA;MAAA,CAEjB;MAAA,gBALKF,UAASA,CAAAO,EAAA;QAAA,OAAAN,KAAA,CAAAH,KAAA,OAAAC,SAAA;MAAA;IAAA,GAKd;IAED,IAAMS,cAAa,GAAI,SAAjBA,cAAaA,CAAKC,IAAI,EAAK;MAC/BxC,YAAY,CAACwB,KAAI,GAAAiB,aAAA,KAASD,IAAG,CAAG,EAAE;MAClCzC,eAAe,CAACyB,KAAI,GAAI,IAAI;MAC5BE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE5B,eAAe,CAACyB,KAAK,CAAC;IAC9C,CAAC;IAEDzC,SAAS,CAAC,YAAM;MACd6B,UAAU,CAAC,CAAC;IACd,CAAC,CAAC;IAEF,IAAM8B,aAAY,GAAI5D,QAAQ,CAAC,YAAM;MACnC,IAAI,CAACa,cAAc,CAAC6B,KAAK,EAAE,OAAOvB,KAAK,CAACuB,KAAK;MAC7C,OAAOvB,KAAK,CAACuB,KAAK,CAACmB,MAAM,CAAC,UAACH,IAAI,EAAK;QAClC,IAAI7C,cAAc,CAAC6B,KAAI,KAAM,MAAM,EAAE,OAAOgB,IAAI,CAACI,MAAK,KAAM,MAAM;QAClE,IAAIjD,cAAc,CAAC6B,KAAI,KAAM,YAAY,EACvC,OAAOgB,IAAI,CAACI,MAAK,KAAM,aAAa;QACtC,IAAIjD,cAAc,CAAC6B,KAAI,KAAM,MAAM,EAAE,OAAOgB,IAAI,CAACI,MAAK,KAAM,WAAW;QACvE,IAAIjD,cAAc,CAAC6B,KAAI,KAAM,SAAS,EACpC,OAAOgB,IAAI,CAACI,MAAK,KAAM,SAAS;QAClC,OAAO,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAMC,UAAS,GAAI,SAAbA,UAASA,CAAKC,IAAI,EAAK;MAC3B,IAAI,CAACA,IAAG,IAAKC,KAAK,CAAC,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;QAC5C,OAAO,cAAc,EAAE;MACzB;MACA,OAAO9D,MAAM,CAAC,IAAI6D,IAAI,CAACF,IAAI,CAAC,EAAE,cAAc,CAAC;IAC/C,CAAC;IAED,IAAMI,gBAAe,GAAI,SAAnBA,gBAAeA,CAAKN,MAAM,EAAK;MACnC,IAAMO,aAAY,GAAI;QACpB,aAAa,EAAE,aAAa;QAC5BC,SAAS,EAAE,cAAc;QACzBC,OAAO,EAAE,YAAY;QACrBC,IAAI,EAAE;MACR,CAAC;MACD,OAAOH,aAAa,CAACP,MAAM,KAAK,aAAa;IAC/C,CAAC;IAED,IAAMW,cAAa,GAAI,SAAjBA,cAAaA,CAAKC,IAAI,EAAK;MAC/B7D,cAAc,CAAC6B,KAAI,GAAIgC,IAAI;IAC7B,CAAC;IAED,IAAMC,cAAa,GAAI,SAAjBA,cAAaA,CAAA,EAAU;MAC3BhE,YAAY,CAAC+B,KAAI,GAAI,CAAC/B,YAAY,CAAC+B,KAAK;IAC1C,CAAC;IACD,IAAMkC,aAAY,GAAI,SAAhBA,aAAYA,CAAA,EAAU;MAC1BjE,YAAY,CAAC+B,KAAI,GAAI,KAAK;IAC5B,CAAC;;IAED;IACA,IAAMmC,WAAU,GAAI7E,QAAQ,CAAC;MAAA,OAAM0B,IAAI,CAACoD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAAA,EAAC;IACpD,IAAMC,UAAS,GAAI/E,QAAQ,CAAC;MAAA,OAAM0B,IAAI,CAACoD,KAAK,CAAC,CAAC,CAAC;IAAA,EAAC;IAChD,IAAME,aAAY,GAAIhF,QAAQ,CAAC;MAAA,OAAMU,SAAS,CAACgC,KAAK;IAAA,EAAC;IAErD,IAAMuC,cAAa,GAAIjF,QAAQ,CAAC;MAAA,OAAMmB,KAAK,CAACuB,KAAK;IAAA,EAAC;IAElD,IAAMwC,UAAS,GAAIlF,QAAQ,CAAC;MAAA,OAAO;QACjCqB,KAAK,EAAE4D,cAAc,CAACvC,KAAK,CAACyC,MAAM;QAClC7D,IAAI,EAAE2D,cAAc,CAACvC,KAAK,CAACmB,MAAM,CAAC,UAACH,IAAI;UAAA,OAAKA,IAAI,CAACI,MAAK,KAAM,MAAM;QAAA,GAC/DqB,MAAM;QACT5D,UAAU,EAAEJ,KAAK,CAACuB,KAAK,CAACmB,MAAM,CAAC,UAACH,IAAI;UAAA,OAAKA,IAAI,CAACI,MAAK,KAAM,aAAa;QAAA,GACnEqB,MAAM;QACT3D,IAAI,EAAEyD,cAAc,CAACvC,KAAK,CAACmB,MAAM,CAAC,UAACH,IAAI;UAAA,OAAKA,IAAI,CAACI,MAAK,KAAM,WAAW;QAAA,GACpEqB,MAAM;QACT1D,OAAO,EAAEwD,cAAc,CAACvC,KAAK,CAACmB,MAAM,CAAC,UAACH,IAAI;UAAA,OAAKA,IAAI,CAACI,MAAK,KAAM,SAAS;QAAA,GACrEqB;MACL,CAAC;IAAA,CAAC,CAAC;IAEH,IAAMC,sBAAqB,GAAIpF,QAAQ,CAAC,YAAM;MAC5C,IAAIqF,QAAO,GAAAC,kBAAA,CAAQ7E,KAAK,CAACU,KAAK,CAAC;;MAE/B;MACA,IAAIT,SAAS,CAACgC,KAAI,KAAM,WAAW,EAAE;QACnC2C,QAAO,GAAIA,QAAQ,CAACxB,MAAM,CAAC,UAACH,IAAI;UAAA,OAAKA,IAAI,CAAC6B,OAAM,KAAM7E,SAAS,CAACgC,KAAK;QAAA,EAAC;MACxE;;MAEA;MACA,IAAI7B,cAAc,CAAC6B,KAAK,EAAE;QACxB2C,QAAO,GAAIA,QAAQ,CAACxB,MAAM,CAAC,UAACH,IAAI,EAAK;UACnC,QAAQ7C,cAAc,CAAC6B,KAAK;YAC1B,KAAK,MAAM;cACT,OAAOgB,IAAI,CAACI,MAAK,KAAM,MAAM;YAC/B,KAAK,MAAM;cACT,OAAOJ,IAAI,CAACI,MAAK,KAAM,WAAW;YACpC,KAAK,SAAS;cACZ,OAAOJ,IAAI,CAACI,MAAK,KAAM,SAAS;YAClC;cACE,OAAO,IAAI;UACf;QACF,CAAC,CAAC;MACJ;;MAEA;MACA,OAAOuB,QAAQ,CAACG,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;QAC7B,IAAMC,MAAK,GAAIF,CAAC,CAAC3E,OAAO,CAAC4B,KAAK,CAAC;QAC/B,IAAMkD,MAAK,GAAIF,CAAC,CAAC5E,OAAO,CAAC4B,KAAK,CAAC;QAE/B,IAAI3B,SAAS,CAAC2B,KAAI,KAAM,KAAK,EAAE;UAC7B,OAAOiD,MAAK,GAAIC,MAAK,GAAI,IAAI,CAAC,CAAC;QACjC;QACA,OAAOD,MAAK,GAAIC,MAAK,GAAI,IAAI,CAAC,CAAC;MACjC,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,IAAMC,YAAW,GAAI,SAAfA,YAAWA,CAAKC,GAAG,EAAK;MAC5BpF,SAAS,CAACgC,KAAI,GAAIoD,GAAG,CAACxF,IAAI;MAC1BM,YAAY,CAAC8B,KAAI,GAAI,KAAK;IAC5B,CAAC;IAED,IAAMqD,cAAa,GAAI,SAAjBA,cAAaA,CAAA,EAAU;MAC3BnF,YAAY,CAAC8B,KAAI,GAAI,CAAC9B,YAAY,CAAC8B,KAAK;IAC1C,CAAC;IAED,IAAMsD,aAAY,GAAI,SAAhBA,aAAYA,CAAA,EAAU;MAC1BpF,YAAY,CAAC8B,KAAI,GAAI,KAAK;IAC5B,CAAC;IAED,IAAMuD,oBAAmB,GAAI,SAAvBA,oBAAmBA,CAAKC,QAAQ,EAAK;MACzCrF,cAAc,CAAC6B,KAAI,GAAIwD,QAAQ;MAC/BvF,YAAY,CAAC+B,KAAI,GAAI,KAAK;IAC5B,CAAC;IAED,IAAMyD,MAAK,GAAI,SAATA,MAAKA,CAAKvE,GAAG,EAAK;MACtB,IAAId,OAAO,CAAC4B,KAAI,KAAMd,GAAG,EAAE;QACzBb,SAAS,CAAC2B,KAAI,GAAI3B,SAAS,CAAC2B,KAAI,KAAM,KAAI,GAAI,MAAK,GAAI,KAAK;MAC9D,OAAO;QACL5B,OAAO,CAAC4B,KAAI,GAAId,GAAG;QACnBb,SAAS,CAAC2B,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;IAED,IAAM0D,oBAAmB,GAAI,SAAvBA,oBAAmBA,CAAK1B,IAAI,EAAK;MACrC,IAAM2B,OAAM,GAAI;QACdhF,KAAK,EAAE,+BAA+B;QACtCC,IAAI,EAAE,+BAA+B;QACrCC,UAAU,EAAE,2BAA2B;QACvCC,IAAI,EAAE,6BAA6B;QACnCC,OAAO,EAAE;MACX,CAAC;MACD,OAAO4E,OAAO,CAAC3B,IAAI,CAAC;IACtB,CAAC;IAED,IAAM4B,sBAAqB,GAAI,SAAzBA,sBAAqBA,CAAK5B,IAAI,EAAK;MACvC,IAAM2B,OAAM,GAAI;QACdhF,KAAK,EAAE,eAAe;QACtBC,IAAI,EAAE,eAAe;QACrBC,UAAU,EAAE,aAAa;QACzBC,IAAI,EAAE,cAAc;QACpBC,OAAO,EAAE;MACX,CAAC;MACD,OAAO4E,OAAO,CAAC3B,IAAI,CAAC;IACtB,CAAC;IAED,OAAO;MACLhE,SAAS,EAATA,SAAS;MACTC,YAAY,EAAZA,YAAY;MACZC,YAAY,EAAZA,YAAY;MACZC,cAAc,EAAdA,cAAc;MACd+C,aAAa,EAAbA,aAAa;MACba,cAAc,EAAdA,cAAc;MACd3D,OAAO,EAAPA,OAAO;MACPC,SAAS,EAATA,SAAS;MACTK,UAAU,EAAVA,UAAU;MACVM,IAAI,EAAJA,IAAI;MACJC,YAAY,EAAZA,YAAY;MACZkD,WAAW,EAAXA,WAAW;MACXE,UAAU,EAAVA,UAAU;MACVC,aAAa,EAAbA,aAAa;MACbE,UAAU,EAAVA,UAAU;MACVE,sBAAsB,EAAtBA,sBAAsB;MACtBH,cAAc,EAAdA,cAAc;MACdY,YAAY,EAAZA,YAAY;MACZlB,cAAc,EAAdA,cAAc;MACdoB,cAAc,EAAdA,cAAc;MACdnB,aAAa,EAAbA,aAAa;MACboB,aAAa,EAAbA,aAAa;MACbC,oBAAoB,EAApBA,oBAAoB;MACpBE,MAAM,EAANA,MAAM;MACNpC,UAAU,EAAVA,UAAU;MACVqC,oBAAoB,EAApBA,oBAAoB;MACpBE,sBAAsB,EAAtBA,sBAAsB;MACtBtF,eAAe,EAAfA,eAAe;MACfC,eAAe,EAAfA,eAAe;MACfwC,cAAc,EAAdA,cAAc;MACdvC,YAAY,EAAZA,YAAY;MACZC,KAAK,EAALA,KAAK;MACLW,UAAU,EAAVA,UAAU;MACVmB,UAAU,EAAVA,UAAU;MACVmB,gBAAgB,EAAhBA;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}