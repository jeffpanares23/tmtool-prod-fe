{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, watch } from \"vue\";\nimport taskService from \"../services/taskService\";\nexport default {\n  props: {\n    task: Object,\n    // Accept task as a prop\n    isVisible: Boolean\n  },\n  emits: [\"close\", \"taskUpdated\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    // Create a reactive copy of the task prop\n    var taskCopy = ref(_objectSpread({}, props.task));\n\n    // Watch for changes in the prop and update the local copy\n    watch(function () {\n      return props.task;\n    }, function (newTask) {\n      taskCopy.value = _objectSpread({}, newTask);\n      console.log(taskCopy.value);\n    }, {\n      immediate: true\n    });\n\n    // Function to update the task\n    var updateTask = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return taskService.updateTask(taskCopy.value.task_id, taskCopy.value);\n            case 3:\n              emit(\"taskUpdated\");\n              emit(\"close\");\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Task update failed:\", _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n      return function updateTask() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    return {\n      taskCopy: taskCopy,\n      updateTask: updateTask\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","taskService","props","task","Object","isVisible","Boolean","emits","setup","_ref","emit","taskCopy","_objectSpread","newTask","value","console","log","immediate","updateTask","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","task_id","t0","error","stop","apply","arguments"],"sources":["C:\\Users\\RYZEN 5 5500\\Documents\\GitHub\\OUTSOURCE\\TMTOOL\\tmtool-prod-fe\\src\\components\\UpdateTaskPanel.vue"],"sourcesContent":["<template>\r\n  <transition name=\"slide\">\r\n    <div v-if=\"isVisible\" class=\"task-panel rounded-2xl\" @click.stop>\r\n      <h2 class=\"text-lg font-bold mb-4\">Update Task</h2>\r\n\r\n      <form @submit.prevent=\"updateTask\">\r\n        <label class=\"font-semibold\">Service:</label>\r\n        <select\r\n          v-model=\"taskCopy.service\"\r\n          class=\"border p-2 rounded w-full mb-2 input-field\"\r\n        >\r\n          <option value=\"Brand Audit\">Brand Audit</option>\r\n          <option value=\"Content Creation\">Content Creation</option>\r\n          <option value=\"SEO Optimization\">SEO Optimization</option>\r\n        </select>\r\n\r\n        <label class=\"font-semibold\">Subject:</label>\r\n        <input\r\n          v-model=\"taskCopy.subject\"\r\n          class=\"border p-2 rounded w-full mb-2 input-field\"\r\n          required\r\n        />\r\n\r\n        <label class=\"font-semibold\">Instructions:</label>\r\n        <textarea\r\n          v-model=\"taskCopy.instructions\"\r\n          class=\"border p-2 rounded w-full mb-2 input-field\"\r\n        ></textarea>\r\n\r\n        <div class=\"flex justify-between mt-4\">\r\n          <button\r\n            type=\"button\"\r\n            @click=\"$emit('close')\"\r\n            class=\"bg-gray-500 text-white px-4 py-2 rounded\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </transition>\r\n  <div v-if=\"isVisible\" class=\"overlay\" @click=\"$emit('close')\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch } from \"vue\";\r\nimport taskService from \"../services/taskService\";\r\n\r\nexport default {\r\n  props: {\r\n    task: Object, // Accept task as a prop\r\n    isVisible: Boolean,\r\n  },\r\n  emits: [\"close\", \"taskUpdated\"],\r\n  setup(props, { emit }) {\r\n    // Create a reactive copy of the task prop\r\n    const taskCopy = ref({ ...props.task });\r\n\r\n    // Watch for changes in the prop and update the local copy\r\n    watch(\r\n      () => props.task,\r\n      (newTask) => {\r\n        taskCopy.value = { ...newTask };\r\n        console.log(taskCopy.value);\r\n      },\r\n      { immediate: true }\r\n    );\r\n\r\n    // Function to update the task\r\n    const updateTask = async () => {\r\n      try {\r\n        await taskService.updateTask(taskCopy.value.task_id, taskCopy.value);\r\n        emit(\"taskUpdated\");\r\n        emit(\"close\");\r\n      } catch (error) {\r\n        console.error(\"Task update failed:\", error);\r\n      }\r\n    };\r\n\r\n    return { taskCopy, updateTask };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.task-panel {\r\n  width: 40%;\r\n  padding: 20px;\r\n  background: white;\r\n  box-shadow: -4px 0 10px rgba(0, 0, 0, 0.1);\r\n  z-index: 41;\r\n}\r\n.overlay {\r\n  position: fixed;\r\n  inset: 0;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 40;\r\n}\r\n.slide-enter-active,\r\n.slide-leave-active {\r\n  transition: transform 0.3s ease-in-out;\r\n}\r\n.slide-enter-from,\r\n.slide-leave-to {\r\n  transform: translateX(100%);\r\n}\r\n</style>\r\n"],"mappings":";;;AAmDA,SAASA,GAAG,EAAEC,KAAI,QAAS,KAAK;AAChC,OAAOC,WAAU,MAAO,yBAAyB;AAEjD,eAAe;EACbC,KAAK,EAAE;IACLC,IAAI,EAAEC,MAAM;IAAE;IACdC,SAAS,EAAEC;EACb,CAAC;EACDC,KAAK,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC;EAC/BC,KAAK,WAALA,KAAKA,CAACN,KAAK,EAAAO,IAAA,EAAY;IAAA,IAARC,IAAG,GAAAD,IAAA,CAAHC,IAAG;IAChB;IACA,IAAMC,QAAO,GAAIZ,GAAG,CAAAa,aAAA,KAAMV,KAAK,CAACC,IAAG,CAAG,CAAC;;IAEvC;IACAH,KAAK,CACH;MAAA,OAAME,KAAK,CAACC,IAAI;IAAA,GAChB,UAACU,OAAO,EAAK;MACXF,QAAQ,CAACG,KAAI,GAAAF,aAAA,KAASC,OAAM,CAAG;MAC/BE,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACG,KAAK,CAAC;IAC7B,CAAC,EACD;MAAEG,SAAS,EAAE;IAAK,CACpB,CAAC;;IAED;IACA,IAAMC,UAAS;MAAA,IAAAC,KAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAI,SAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAET3B,WAAW,CAACiB,UAAU,CAACP,QAAQ,CAACG,KAAK,CAACe,OAAO,EAAElB,QAAQ,CAACG,KAAK,CAAC;YAAA;cACpEJ,IAAI,CAAC,aAAa,CAAC;cACnBA,IAAI,CAAC,OAAO,CAAC;cAAAgB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAI,EAAA,GAAAJ,QAAA;cAEbX,OAAO,CAACgB,KAAK,CAAC,qBAAqB,EAAAL,QAAA,CAAAI,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAJ,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA,CAE9C;MAAA,gBARKL,UAASA,CAAA;QAAA,OAAAC,KAAA,CAAAc,KAAA,OAAAC,SAAA;MAAA;IAAA,GAQd;IAED,OAAO;MAAEvB,QAAQ,EAARA,QAAQ;MAAEO,UAAS,EAATA;IAAW,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}