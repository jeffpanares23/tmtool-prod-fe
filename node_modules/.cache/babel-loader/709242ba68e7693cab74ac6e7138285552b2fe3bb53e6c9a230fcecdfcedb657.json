{"ast":null,"code":"import _slicedToArray from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { format } from \"./format.js\";\n\n/**\n * The {@link formatRelative} function options.\n */\n\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * @param date - The date to format\n * @param baseDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The date in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws `options.locale` must contain `formatRelative` property\n *\n * @example\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\n * const result = formatRelative(subDays(new Date(), 6), new Date())\n * //=> \"last Thursday at 12:45 AM\"\n */\nexport function formatRelative(date, baseDate, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$weekStartsOn, _options$locale2, _defaultOptions$local;\n  var _normalizeDates = normalizeDates(options === null || options === void 0 ? void 0 : options[\"in\"], date, baseDate),\n    _normalizeDates2 = _slicedToArray(_normalizeDates, 2),\n    date_ = _normalizeDates2[0],\n    baseDate_ = _normalizeDates2[1];\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var weekStartsOn = (_ref2 = (_ref3 = (_ref4 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 || (_options$locale2 = options.locale) === null || _options$locale2 === void 0 || (_options$locale2 = _options$locale2.options) === null || _options$locale2 === void 0 ? void 0 : _options$locale2.weekStartsOn) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local = _defaultOptions$local.options) === null || _defaultOptions$local === void 0 ? void 0 : _defaultOptions$local.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : 0;\n  var diff = differenceInCalendarDays(date_, baseDate_);\n  if (isNaN(diff)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n  var token;\n  if (diff < -6) {\n    token = \"other\";\n  } else if (diff < -1) {\n    token = \"lastWeek\";\n  } else if (diff < 0) {\n    token = \"yesterday\";\n  } else if (diff < 1) {\n    token = \"today\";\n  } else if (diff < 2) {\n    token = \"tomorrow\";\n  } else if (diff < 7) {\n    token = \"nextWeek\";\n  } else {\n    token = \"other\";\n  }\n  var formatStr = locale.formatRelative(token, date_, baseDate_, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n  return format(date_, formatStr, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n}\n\n// Fallback for modularized imports:\nexport default formatRelative;","map":{"version":3,"names":["defaultLocale","getDefaultOptions","normalizeDates","differenceInCalendarDays","format","formatRelative","date","baseDate","options","_ref","_options$locale","_ref2","_ref3","_ref4","_options$weekStartsOn","_options$locale2","_defaultOptions$local","_normalizeDates","_normalizeDates2","_slicedToArray","date_","baseDate_","defaultOptions","locale","weekStartsOn","diff","isNaN","RangeError","token","formatStr"],"sources":["C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/date-fns/formatRelative.js"],"sourcesContent":["import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { format } from \"./format.js\";\n\n/**\n * The {@link formatRelative} function options.\n */\n\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * @param date - The date to format\n * @param baseDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The date in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws `options.locale` must contain `formatRelative` property\n *\n * @example\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\n * const result = formatRelative(subDays(new Date(), 6), new Date())\n * //=> \"last Thursday at 12:45 AM\"\n */\nexport function formatRelative(date, baseDate, options) {\n  const [date_, baseDate_] = normalizeDates(options?.in, date, baseDate);\n\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const diff = differenceInCalendarDays(date_, baseDate_);\n\n  if (isNaN(diff)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let token;\n  if (diff < -6) {\n    token = \"other\";\n  } else if (diff < -1) {\n    token = \"lastWeek\";\n  } else if (diff < 0) {\n    token = \"yesterday\";\n  } else if (diff < 1) {\n    token = \"today\";\n  } else if (diff < 2) {\n    token = \"tomorrow\";\n  } else if (diff < 7) {\n    token = \"nextWeek\";\n  } else {\n    token = \"other\";\n  }\n\n  const formatStr = locale.formatRelative(token, date_, baseDate_, {\n    locale,\n    weekStartsOn,\n  });\n  return format(date_, formatStr, { locale, weekStartsOn });\n}\n\n// Fallback for modularized imports:\nexport default formatRelative;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}