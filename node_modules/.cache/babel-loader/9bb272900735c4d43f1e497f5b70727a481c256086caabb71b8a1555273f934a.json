{"ast":null,"code":"import _slicedToArray from \"C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  var _normalizeDates = normalizeDates(options === null || options === void 0 ? void 0 : options[\"in\"], laterDate, laterDate, earlierDate),\n    _normalizeDates2 = _slicedToArray(_normalizeDates, 3),\n    laterDate_ = _normalizeDates2[0],\n    workingLaterDate = _normalizeDates2[1],\n    earlierDate_ = _normalizeDates2[2];\n  var sign = compareAsc(workingLaterDate, earlierDate_);\n  var difference = Math.abs(differenceInCalendarMonths(workingLaterDate, earlierDate_));\n  if (difference < 1) return 0;\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27) workingLaterDate.setDate(30);\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n  var isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n  if (isLastDayOfMonth(laterDate_) && difference === 1 && compareAsc(laterDate_, earlierDate_) === 1) {\n    isLastMonthNotFull = false;\n  }\n  var result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;","map":{"version":3,"names":["normalizeDates","compareAsc","differenceInCalendarMonths","isLastDayOfMonth","differenceInMonths","laterDate","earlierDate","options","_normalizeDates","_normalizeDates2","_slicedToArray","laterDate_","workingLaterDate","earlierDate_","sign","difference","Math","abs","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","result"],"sources":["C:/Users/RYZEN 5 5500/Documents/GitHub/OUTSOURCE/TMTOOL/tmtool-prod-fe/node_modules/date-fns/differenceInMonths.js"],"sourcesContent":["import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,0BAA0B;AACzD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,0BAA0B,QAAQ,iCAAiC;AAC5E,SAASC,gBAAgB,QAAQ,uBAAuB;;AAExD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkBA,CAACC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAE;EAClE,IAAAC,eAAA,GAAqDR,cAAc,CACjEO,OAAO,aAAPA,OAAO,uBAAPA,OAAO,MAAI,EACXF,SAAS,EACTA,SAAS,EACTC,WACF,CAAC;IAAAG,gBAAA,GAAAC,cAAA,CAAAF,eAAA;IALMG,UAAU,GAAAF,gBAAA;IAAEG,gBAAgB,GAAAH,gBAAA;IAAEI,YAAY,GAAAJ,gBAAA;EAOjD,IAAMK,IAAI,GAAGb,UAAU,CAACW,gBAAgB,EAAEC,YAAY,CAAC;EACvD,IAAME,UAAU,GAAGC,IAAI,CAACC,GAAG,CACzBf,0BAA0B,CAACU,gBAAgB,EAAEC,YAAY,CAC3D,CAAC;EAED,IAAIE,UAAU,GAAG,CAAC,EAAE,OAAO,CAAC;EAE5B,IAAIH,gBAAgB,CAACM,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAIN,gBAAgB,CAACO,OAAO,CAAC,CAAC,GAAG,EAAE,EACtEP,gBAAgB,CAACQ,OAAO,CAAC,EAAE,CAAC;EAE9BR,gBAAgB,CAACS,QAAQ,CAACT,gBAAgB,CAACM,QAAQ,CAAC,CAAC,GAAGJ,IAAI,GAAGC,UAAU,CAAC;EAE1E,IAAIO,kBAAkB,GAAGrB,UAAU,CAACW,gBAAgB,EAAEC,YAAY,CAAC,KAAK,CAACC,IAAI;EAE7E,IACEX,gBAAgB,CAACQ,UAAU,CAAC,IAC5BI,UAAU,KAAK,CAAC,IAChBd,UAAU,CAACU,UAAU,EAAEE,YAAY,CAAC,KAAK,CAAC,EAC1C;IACAS,kBAAkB,GAAG,KAAK;EAC5B;EAEA,IAAMC,MAAM,GAAGT,IAAI,IAAIC,UAAU,GAAG,CAACO,kBAAkB,CAAC;EACxD,OAAOC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM;AAClC;;AAEA;AACA,eAAenB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}